<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="co.ghola.smogalert">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_icon"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".SplashActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:label="@string/app_name"
            android:theme="@style/SplashTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar"/>
        <!-- receiver sends a notification to user when pollution levels are high -->
        <receiver android:name=".broadcastreceiver.PushReceiver" android:enabled="true" android:exported="true" />

        <provider
            android:name=".contentprovider.AQIContentProvider"
            android:authorities="co.ghola.smogalert"
            android:enabled="true"
            android:exported="false" />

        <!--
This service implements our SyncAdapter. It needs to be exported, so that the system
sync framework can access it.
        -->
        <service
            android:name=".async.SyncService"
            android:exported="true">

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
       This implements the account we'll use as an attachment point for our SyncAdapter. Since
       our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
       feed), this account's implementation is largely empty.

       It's also possible to attach a SyncAdapter to an existing account provided by another
       package. In that case, this element could be omitted here.
        -->
        <service android:name=".async.GenericAccountService">

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XML file which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <meta-data
            android:name="io.fabric.ApiKey"
            android:value="5500c611d39db003f77ce3f4e3e50cc2c068f7f7" />

    </application>

</manifest>
